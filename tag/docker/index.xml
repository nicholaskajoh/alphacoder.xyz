<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Alpha Coder</title>
    <link>https://alphacoder.xyz/tag/docker/</link>
    <description>Recent content in Docker on Alpha Coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2017 to ∞. Nicholas Kajoh. All rights reserved.</copyright>
    <lastBuildDate>Sun, 01 Sep 2019 06:29:54 +0100</lastBuildDate><atom:link href="https://alphacoder.xyz/tag/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to connect to a host&#39;s database from inside a Docker container</title>
      <link>https://alphacoder.xyz/connect-to-host-database-from-docker-container/</link>
      <pubDate>Sun, 01 Sep 2019 06:29:54 +0100</pubDate>
      
      <guid>https://alphacoder.xyz/connect-to-host-database-from-docker-container/</guid>
      <description>There are several ways to interact with a DB when developing using Docker:
Connect to an online DB instance. Connect to a local DB running in another container. Connect to a local DB running on a host machine (e.g your laptop). The first option can be easy and fast to setup i.e if you&amp;rsquo;re using a managed DB service. But these conveniences come at a monetary cost. Plus, you won&amp;rsquo;t be able to develop without an internet connection.</description>
    </item>
    
    <item>
      <title>Here&#39;s a quick Elasticsearch-Kibana setup via Docker for development</title>
      <link>https://alphacoder.xyz/elasticsearch-kibana-docker-development-setup/</link>
      <pubDate>Sun, 01 Sep 2019 06:18:43 +0100</pubDate>
      
      <guid>https://alphacoder.xyz/elasticsearch-kibana-docker-development-setup/</guid>
      <description>Are you new to the Elastic stack or configuring a new machine and need an easy way to setup, and a single command to run Elasticsearch &amp;amp; Kibana? Here&amp;rsquo;s a quick Elasticsearch-Kibana setup using Docker for your dev environment.
Setup Install Docker for your OS. Pull the Docker image for Elasticsearch: docker pull docker.elastic.co/elasticsearch/elasticsearch:7.3.0 (you can change 7.3.0 to the latest or your preferred version). Pull the Docker image for Kibana: docker pull docker.</description>
    </item>
    
    <item>
      <title>Deploy microservices on Kubernetes</title>
      <link>https://alphacoder.xyz/deploy-microservices-on-kubernetes/</link>
      <pubDate>Fri, 01 Feb 2019 16:44:09 +0000</pubDate>
      
      <guid>https://alphacoder.xyz/deploy-microservices-on-kubernetes/</guid>
      <description>Kubernetes (AKA k8s) has gained widespread adoption in recent years as a platform for microservices due to its ability to seamlessly automate app deployment at scale. Pinterest uses a suite of over 1000 microservices to power their &amp;ldquo;discovery engine&amp;rdquo;. Imagine having to configure and manage servers to run these services manually. It&amp;rsquo;s an Engineer&amp;rsquo;s nightmare to say the least.
Kubernetes bills itself as &amp;ldquo;a portable, extensible open-source platform for managing containerized workloads and services&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Dockerizing Django in development and production</title>
      <link>https://alphacoder.xyz/dockerizing-django/</link>
      <pubDate>Wed, 15 Aug 2018 12:54:00 +0000</pubDate>
      
      <guid>https://alphacoder.xyz/dockerizing-django/</guid>
      <description>Setting up Docker can sometimes be confusing. There are many little pieces that need to come together for everything to work as expected. Outlined in this post is a simple Docker setup you can use for your Django projects in development and production environments.
TL;DR: Sample project You can check out the code on GitHub.
Dockerfile FROM python:3.6-alpine RUN apk --update add \ build-base \ postgresql \ postgresql-dev \ libpq \ # pillow dependencies jpeg-dev \ zlib-dev RUN mkdir /www WORKDIR /www COPY requirements.</description>
    </item>
    
    <item>
      <title>How to run multiple apps on one server using Docker and Traefik</title>
      <link>https://alphacoder.xyz/multiple-apps-one-server-with-docker-and-traefik/</link>
      <pubDate>Thu, 28 Jun 2018 17:41:00 +0000</pubDate>
      
      <guid>https://alphacoder.xyz/multiple-apps-one-server-with-docker-and-traefik/</guid>
      <description>Running multiple apps on a single machine has never been easier! In this tutorial, I’ll show you how to run 3 apps on one server using Docker and Traefik.
Use case Say you’re low on cash and can only rent one server, you can run your website, blog and SaaS app on the same machine (what we’ll do in this tutorial). Or you can run an API (back-end) and SPA (front-end).</description>
    </item>
    
  </channel>
</rss>
